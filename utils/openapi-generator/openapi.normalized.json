{"components":{"schemas":{"Fact":{"properties":{"id":{"format":"int64","type":"integer"},"name":{"type":"string"},"type":{"$ref":"#/components/schemas/FactType"}},"type":"object"},"FactType":{"enum":["BOOLEAN","INT","LIST","STRING"],"type":"string"},"List":{"type":"array"},"ListObject":{"items":{"type":"object"},"type":"array"},"ListUUID":{"items":{"format":"uuid","pattern":"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}","type":"string"},"type":"array"},"MapStringLong":{"additionalProperties":{"format":"int64","type":"integer"},"type":"object"},"MapStringString":{"additionalProperties":{"type":"string"},"type":"object"},"PagedResponse":{"properties":{"data":{"$ref":"#/components/schemas/ListObject"},"links":{"$ref":"#/components/schemas/MapStringString"},"meta":{"$ref":"#/components/schemas/MapStringLong"}},"type":"object"},"Policy":{"properties":{"actions":{"description":"String describing actions separated by ';' when the policy is evaluated to true.Allowed values are 'email' and 'webhook'","type":"string"},"conditions":{"description":"Condition string.","example":"arch = \"x86_64\"","minLength":1,"nullable":false,"type":"string"},"ctime":{"description":"Create time in a form like '2020-01-24 12:19:56.718', output only","format":"yyyy-MM-dd hh:mm:ss.ddd","readOnly":true,"type":"string"},"description":{"description":"A short description of the policy.","type":"string"},"id":{"$ref":"#/components/schemas/UUID"},"isEnabled":{"type":"boolean"},"lastTriggered":{"format":"int64","type":"integer"},"mtime":{"description":"Last update time in a form like '2020-01-24 12:19:56.718', output only","format":"yyyy-MM-dd hh:mm:ss.ddd","readOnly":true,"type":"string"},"name":{"description":"Name of the rule. Must be unique per customer account.","maxLength":150,"minLength":1,"nullable":false,"type":"string"}},"required":["conditions","name"],"type":"object"},"UUID":{"format":"uuid","pattern":"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}","type":"string"}}},"info":{"description":"The API for Policies","title":"Policies","version":"1.0"},"openapi":"3.0.1","paths":{"/":{"get":{"operationId":"get","responses":{"404":{"description":"There is no API functionality at this place"}},"summary":"Just a filler to have a defined return code for the base path"}},"/facts":{"get":{"operationId":"getFacts","responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Fact"},"type":"array"}}},"description":"List of facts"}},"summary":"Retrieve a list of fact (keys) along with their data types"}},"/policies":{"get":{"operationId":"getPolicies","parameters":[{"description":"Operations used with the filter","in":"query","name":"filter:op[description]","schema":{"default":"equal","enum":["equal","like","ilike","not_equal"],"type":"string"}},{"description":"Operations used with the filter","in":"query","name":"filter:op[name]","schema":{"default":"equal","enum":["equal","like","ilike","not_equal"],"type":"string"}},{"description":"Filtering policies by the description depending on the Filter operator used.","in":"query","name":"filter[description]","schema":{"type":"string"}},{"description":"Filtering policies by the is_enabled field.Defaults to true if no operand is given.","in":"query","name":"filter[is_enabled]","schema":{"default":"true","enum":["true","false"],"type":"string"}},{"description":"Filtering policies by the name depending on the Filter operator used.","in":"query","name":"filter[name]","schema":{"type":"string"}},{"description":"Number of items per page, if not specified uses 10. -1 can be used to specify an unlimited page, when specified it ignores the offset","in":"query","name":"limit","schema":{"type":"integer"}},{"description":"Page number, starts 0, if not specified uses 0.","in":"query","name":"offset","schema":{"type":"integer"}},{"description":"Column to sort the results by","in":"query","name":"sortColumn","schema":{"enum":["name","description","is_enabled","mtime"],"type":"string"}},{"description":"Sort direction used","in":"query","name":"sortDirection","schema":{"enum":["asc","desc"],"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PagedResponse"}}},"description":"Policies found","headers":{"TotalCount":{"description":"Total number of items found","schema":{"type":"integer"},"style":"simple"}}},"400":{"description":"Bad parameter for sorting was passed"},"403":{"description":"Individual permissions missing to complete action"},"404":{"description":"No policies found for customer"}},"summary":"Return all policies for a given account"},"post":{"operationId":"postPolicies","parameters":[{"description":"If passed and set to true, the passed policy is also persisted (if it is valid)","in":"query","name":"alsoStore","schema":{"type":"boolean"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Policy"}}}},"responses":{"200":{"description":"Policy validated"},"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Policy"}}},"description":"Policy persisted"},"400":{"content":{"application/json":{"schema":{"description":"Reason for failure","properties":{"msg":{"type":"string"}},"type":"object"}}},"description":"No policy provided or policy validation failed"},"403":{"description":"Individual permissions missing to complete action"},"409":{"content":{"application/json":{"schema":{"description":"Reason for failure","properties":{"msg":{"type":"string"}},"type":"object"}}},"description":"Persisting failed"},"500":{"description":"Internal error"}},"summary":"Validate (and possibly persist) a passed policy for the given account"}},"/policies/ids":{"delete":{"operationId":"deletePoliciesIds","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListUUID"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/UUID"},"type":"array"}}},"description":"Policies deleted"},"403":{"description":"Individual permissions missing to complete action"}},"summary":"Delete policies for a customer by the ids passed in the body. Result will be a list of deleted UUIDs"},"get":{"operationId":"getPoliciesIds","parameters":[{"description":"Operations used with the filter","in":"query","name":"filter:op[description]","schema":{"default":"equal","enum":["equal","like","ilike","not_equal"],"type":"string"}},{"description":"Operations used with the filter","in":"query","name":"filter:op[name]","schema":{"default":"equal","enum":["equal","like","ilike","not_equal"],"type":"string"}},{"description":"Filtering policies by the description depending on the Filter operator used.","in":"query","name":"filter[description]","schema":{"type":"string"}},{"description":"Filtering policies by the is_enabled field.Defaults to true if no operand is given.","in":"query","name":"filter[is_enabled]","schema":{"default":"true","enum":["true","false"],"type":"string"}},{"description":"Filtering policies by the name depending on the Filter operator used.","in":"query","name":"filter[name]","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/List"}}},"description":"PolicyIds found"},"400":{"description":"Bad parameter for sorting was passed"},"403":{"description":"Individual permissions missing to complete action"},"404":{"description":"No policies found for customer"}},"summary":"Return all policy ids for a given account after applying the filters"}},"/policies/ids/enabled":{"post":{"operationId":"postPoliciesIdsEnabled","parameters":[{"in":"query","name":"enabled","schema":{"type":"boolean"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListUUID"}}}},"responses":{"200":{"description":"Policy updated"},"403":{"description":"Individual permissions missing to complete action"}},"summary":"Enable/disable policies identified by list of uuid in body"}},"/policies/sync":{"post":{"operationId":"postPoliciesSync","parameters":[{"in":"query","name":"token","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"}}}},"/policies/validate":{"post":{"operationId":"postPoliciesValidate","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Policy"}}}},"responses":{"200":{"description":"Condition validated"},"400":{"description":"No policy provided or condition not valid"},"500":{"description":"Internal error"}},"summary":"Validates a Policy condition"}},"/policies/validate-name":{"post":{"operationId":"postPoliciesValidate-name","parameters":[{"in":"query","name":"id","schema":{"$ref":"#/components/schemas/UUID"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"string"}}}},"responses":{"200":{"description":"Name validated"},"400":{"description":"Policy validation failed"},"403":{"description":"Individual permissions missing to complete action"},"409":{"description":"Name not unique"},"500":{"description":"Internal error"}},"summary":"Validates the Policy.name and verifies if it is unique."}},"/policies/{id}":{"delete":{"operationId":"deletePoliciesById","parameters":[{"in":"path","name":"id","required":true,"schema":{"$ref":"#/components/schemas/UUID"}}],"responses":{"200":{"description":"Policy deleted"},"403":{"description":"Individual permissions missing to complete action"},"404":{"description":"Policy not found"}},"summary":"Delete a single policy for a customer by its id"},"get":{"operationId":"getPoliciesById","parameters":[{"in":"path","name":"id","required":true,"schema":{"$ref":"#/components/schemas/UUID"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Policy"}}},"description":"Policy found"},"403":{"description":"Individual permissions missing to complete action"},"404":{"description":"Policy not found"}},"summary":"Retrieve a single policy for a customer by its id"}},"/policies/{id}/enabled":{"post":{"operationId":"postPoliciesByIdEnabled","parameters":[{"description":"ID of the Policy","in":"path","name":"id","required":true,"schema":{"$ref":"#/components/schemas/UUID"}},{"description":"Should the policy be enabled (true) or disabled (false, default)","in":"query","name":"enabled","schema":{"default":"false","type":"boolean"}}],"responses":{"200":{"description":"Policy updated"},"403":{"description":"Individual permissions missing to complete action"},"404":{"description":"Policy not found"},"500":{"description":"Updating failed"}},"summary":"Enable/disable a policy"}},"/policies/{policyId}":{"put":{"operationId":"putPoliciesByPolicyId","parameters":[{"in":"path","name":"policyId","required":true,"schema":{"$ref":"#/components/schemas/UUID"}},{"in":"query","name":"dry","schema":{"type":"boolean"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Policy"}}}},"responses":{"200":{"description":"Policy updated or policy validated"},"400":{"description":"Invalid or no policy provided"},"403":{"description":"Individual permissions missing to complete action"},"404":{"description":"Policy did not exist - did you store it before?"},"409":{"content":{"application/json":{"schema":{"description":"Reason for failure","properties":{"msg":{"type":"string"}},"type":"object"}}},"description":"Persisting failed"}},"summary":"Update a single policy for a customer by its id"}}},"servers":[{"description":"Production Server","url":"https://cloud.redhat.com","variables":{"basePath":{"default":"/api/policies/v1.0"}}},{"description":"Development Server","url":"http://localhost:{port}","variables":{"basePath":{"default":"/api/policies/v1.0"},"port":{"default":"8080"}}}]}
