// Generated from /home/josejulio/Documentos/redhat/insights/custom-policies-ui-frontend/utils/Expression.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class ExpressionLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly OR = 6;
	public static readonly AND = 7;
	public static readonly NOT = 8;
	public static readonly EQUAL = 9;
	public static readonly NOTEQUAL = 10;
	public static readonly CONTAINS = 11;
	public static readonly NEG = 12;
	public static readonly GT = 13;
	public static readonly GTE = 14;
	public static readonly LT = 15;
	public static readonly LTE = 16;
	public static readonly IN = 17;
	public static readonly NUMBER = 18;
	public static readonly FLOAT = 19;
	public static readonly INTEGER = 20;
	public static readonly SIMPLETEXT = 21;
	public static readonly STRING = 22;
	public static readonly WS = 23;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "OR", "AND", "NOT", "EQUAL", "NOTEQUAL",
		"CONTAINS", "NEG", "GT", "GTE", "LT", "LTE", "IN", "NUMBER", "FLOAT",
		"INTEGER", "SIMPLETEXT", "STRING", "WS", "ESC", "UNICODE", "HEX", "ESC_DOT",
		"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N",
		"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "NEG_OP",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'('", "')'", "'['", "','", "']'", undefined, undefined, undefined,
		"'='", "'!='", undefined, undefined, "'>'", "'>='", "'<'", "'<='",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, "OR",
		"AND", "NOT", "EQUAL", "NOTEQUAL", "CONTAINS", "NEG", "GT", "GTE", "LT",
		"LTE", "IN", "NUMBER", "FLOAT", "INTEGER", "SIMPLETEXT", "STRING", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ExpressionLexer._LITERAL_NAMES, ExpressionLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return ExpressionLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(ExpressionLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Expression.g4"; }

	// @Override
	public get ruleNames(): string[] { return ExpressionLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return ExpressionLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return ExpressionLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return ExpressionLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x19\u0119\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03" +
		"\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\v\x03" +
		"\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\x0E" +
		"\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11" +
		"\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x05\x13\xA5\n\x13\x03" +
		"\x14\x03\x14\x03\x14\x03\x14\x03\x15\x06\x15\xAC\n\x15\r\x15\x0E\x15\xAD" +
		"\x03\x16\x03\x16\x03\x16\x07\x16\xB3\n\x16\f\x16\x0E\x16\xB6\v\x16\x03" +
		"\x17\x03\x17\x03\x17\x07\x17\xBB\n\x17\f\x17\x0E\x17\xBE\v\x17\x03\x17" +
		"\x03\x17\x03\x17\x03\x17\x07\x17\xC4\n\x17\f\x17\x0E\x17\xC7\v\x17\x03" +
		"\x17\x05\x17\xCA\n\x17\x03\x18\x06\x18\xCD\n\x18\r\x18\x0E\x18\xCE\x03" +
		"\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x05\x19\xD7\n\x19\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C" +
		"\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03" +
		"!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03\'\x03\'" +
		"\x03(\x03(\x03)\x03)\x03*\x03*\x03+\x03+\x03,\x03,\x03-\x03-\x03.\x03" +
		".\x03/\x03/\x030\x030\x031\x031\x032\x032\x033\x033\x034\x034\x035\x03" +
		"5\x036\x036\x037\x037\x02\x02\x028\x03\x02\x03\x05\x02\x04\x07\x02\x05" +
		"\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17" +
		"\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13" +
		"%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x023\x02" +
		"\x025\x02\x027\x02\x029\x02\x02;\x02\x02=\x02\x02?\x02\x02A\x02\x02C\x02" +
		"\x02E\x02\x02G\x02\x02I\x02\x02K\x02\x02M\x02\x02O\x02\x02Q\x02\x02S\x02" +
		"\x02U\x02\x02W\x02\x02Y\x02\x02[\x02\x02]\x02\x02_\x02\x02a\x02\x02c\x02" +
		"\x02e\x02\x02g\x02\x02i\x02\x02k\x02\x02m\x02\x02\x03\x02$\x03\x022;\x07" +
		"\x02002;C\\aac|\x07\x02/02;C\\aac|\x04\x02))^^\x04\x02$$^^\x05\x02\v\f" +
		"\x0F\x0F\"\"\n\x02))11^^ddhhppttvv\x05\x022;CHch\x04\x02CCcc\x04\x02D" +
		"Ddd\x04\x02EEee\x04\x02FFff\x04\x02GGgg\x04\x02HHhh\x04\x02IIii\x04\x02" +
		"JJjj\x04\x02KKkk\x04\x02LLll\x04\x02MMmm\x04\x02NNnn\x04\x02OOoo\x04\x02" +
		"PPpp\x04\x02QQqq\x04\x02RRrr\x04\x02SSss\x04\x02TTtt\x04\x02UUuu\x04\x02" +
		"VVvv\x04\x02WWww\x04\x02XXxx\x04\x02YYyy\x04\x02ZZzz\x04\x02[[{{\x04\x02" +
		"\\\\||\x02\u0105\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07" +
		"\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03" +
		"\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03" +
		"\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03" +
		"\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03" +
		"\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02" +
		"\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02" +
		"-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x03o\x03\x02\x02\x02\x05q\x03\x02" +
		"\x02\x02\x07s\x03\x02\x02\x02\tu\x03\x02\x02\x02\vw\x03\x02\x02\x02\r" +
		"y\x03\x02\x02\x02\x0F|\x03\x02\x02\x02\x11\x80\x03\x02\x02\x02\x13\x84" +
		"\x03\x02\x02\x02\x15\x86\x03\x02\x02\x02\x17\x89\x03\x02\x02\x02\x19\x92" +
		"\x03\x02\x02\x02\x1B\x94\x03\x02\x02\x02\x1D\x96\x03\x02\x02\x02\x1F\x99" +
		"\x03\x02\x02\x02!\x9B\x03\x02\x02\x02#\x9E\x03\x02\x02\x02%\xA1\x03\x02" +
		"\x02\x02\'\xA6\x03\x02\x02\x02)\xAB\x03\x02\x02\x02+\xAF\x03\x02\x02\x02" +
		"-\xC9\x03\x02\x02\x02/\xCC\x03\x02\x02\x021\xD2\x03\x02\x02\x023\xD8\x03" +
		"\x02\x02\x025\xDE\x03\x02\x02\x027\xE0\x03\x02\x02\x029\xE3\x03\x02\x02" +
		"\x02;\xE5\x03\x02\x02\x02=\xE7\x03\x02\x02\x02?\xE9\x03\x02\x02\x02A\xEB" +
		"\x03\x02\x02\x02C\xED\x03\x02\x02\x02E\xEF\x03\x02\x02\x02G\xF1\x03\x02" +
		"\x02\x02I\xF3\x03\x02\x02\x02K\xF5\x03\x02\x02\x02M\xF7\x03\x02\x02\x02" +
		"O\xF9\x03\x02\x02\x02Q\xFB\x03\x02\x02\x02S\xFD\x03\x02\x02\x02U\xFF\x03" +
		"\x02\x02\x02W\u0101\x03\x02\x02\x02Y\u0103\x03\x02\x02\x02[\u0105\x03" +
		"\x02\x02\x02]\u0107\x03\x02\x02\x02_\u0109\x03\x02\x02\x02a\u010B\x03" +
		"\x02\x02\x02c\u010D\x03\x02\x02\x02e\u010F\x03\x02\x02\x02g\u0111\x03" +
		"\x02\x02\x02i\u0113\x03\x02\x02\x02k\u0115\x03\x02\x02\x02m\u0117\x03" +
		"\x02\x02\x02op\x07*\x02\x02p\x04\x03\x02\x02\x02qr\x07+\x02\x02r\x06\x03" +
		"\x02\x02\x02st\x07]\x02\x02t\b\x03\x02\x02\x02uv\x07.\x02\x02v\n\x03\x02" +
		"\x02\x02wx\x07_\x02\x02x\f\x03\x02\x02\x02yz\x05U+\x02z{\x05[.\x02{\x0E" +
		"\x03\x02\x02\x02|}\x059\x1D\x02}~\x05S*\x02~\x7F\x05? \x02\x7F\x10\x03" +
		"\x02\x02\x02\x80\x81\x05S*\x02\x81\x82\x05U+\x02\x82\x83\x05_0\x02\x83" +
		"\x12\x03\x02\x02\x02\x84\x85\x07?\x02\x02\x85\x14\x03\x02\x02\x02\x86" +
		"\x87\x07#\x02\x02\x87\x88\x07?\x02\x02\x88\x16\x03\x02\x02\x02\x89\x8A" +
		"\x05=\x1F\x02\x8A\x8B\x05U+\x02\x8B\x8C\x05S*\x02\x8C\x8D\x05_0\x02\x8D" +
		"\x8E\x059\x1D\x02\x8E\x8F\x05I%\x02\x8F\x90\x05S*\x02\x90\x91\x05]/\x02" +
		"\x91\x18\x03\x02\x02\x02\x92\x93\x05m7\x02\x93\x1A\x03\x02\x02\x02\x94" +
		"\x95\x07@\x02\x02\x95\x1C\x03\x02\x02\x02\x96\x97\x07@\x02\x02\x97\x98" +
		"\x07?\x02\x02\x98\x1E\x03\x02\x02\x02\x99\x9A\x07>\x02\x02\x9A \x03\x02" +
		"\x02\x02\x9B\x9C\x07>\x02\x02\x9C\x9D\x07?\x02\x02\x9D\"\x03\x02\x02\x02" +
		"\x9E\x9F\x05I%\x02\x9F\xA0\x05S*\x02\xA0$\x03\x02\x02\x02\xA1\xA4\x05" +
		")\x15\x02\xA2\xA3\x070\x02\x02\xA3\xA5\x05)\x15\x02\xA4\xA2\x03\x02\x02" +
		"\x02\xA4\xA5\x03\x02\x02\x02\xA5&\x03\x02\x02\x02\xA6\xA7\x05)\x15\x02" +
		"\xA7\xA8\x070\x02\x02\xA8\xA9\x05)\x15\x02\xA9(\x03\x02\x02\x02\xAA\xAC" +
		"\t\x02\x02\x02\xAB\xAA\x03\x02\x02\x02\xAC\xAD\x03\x02\x02\x02\xAD\xAB" +
		"\x03\x02\x02\x02\xAD\xAE\x03\x02\x02\x02\xAE*\x03\x02\x02\x02\xAF\xB4" +
		"\t\x03\x02\x02\xB0\xB3\t\x04\x02\x02\xB1\xB3\x057\x1C\x02\xB2\xB0\x03" +
		"\x02\x02\x02\xB2\xB1\x03\x02\x02\x02\xB3\xB6\x03\x02\x02\x02\xB4\xB2\x03" +
		"\x02\x02\x02\xB4\xB5\x03\x02\x02\x02\xB5,\x03\x02\x02\x02\xB6\xB4\x03" +
		"\x02\x02\x02\xB7\xBC\x07)\x02\x02\xB8\xBB\x051\x19\x02\xB9\xBB\n\x05\x02" +
		"\x02\xBA\xB8\x03\x02\x02\x02\xBA\xB9\x03\x02\x02\x02\xBB\xBE\x03\x02\x02" +
		"\x02\xBC\xBA\x03\x02\x02\x02\xBC\xBD\x03\x02\x02\x02\xBD\xBF\x03\x02\x02" +
		"\x02\xBE\xBC\x03\x02\x02\x02\xBF\xCA\x07)\x02\x02\xC0\xC5\x07$\x02\x02" +
		"\xC1\xC4\x051\x19\x02\xC2\xC4\n\x06\x02\x02\xC3\xC1\x03\x02\x02\x02\xC3" +
		"\xC2\x03\x02\x02\x02\xC4\xC7\x03\x02\x02\x02\xC5\xC3\x03\x02\x02\x02\xC5" +
		"\xC6\x03\x02\x02\x02\xC6\xC8\x03\x02\x02\x02\xC7\xC5\x03\x02\x02\x02\xC8" +
		"\xCA\x07$\x02\x02\xC9\xB7\x03\x02\x02\x02\xC9\xC0\x03\x02\x02\x02\xCA" +
		".\x03\x02\x02\x02\xCB\xCD\t\x07\x02\x02\xCC\xCB\x03\x02\x02\x02\xCD\xCE" +
		"\x03\x02\x02\x02\xCE\xCC\x03\x02\x02\x02\xCE\xCF\x03\x02\x02\x02\xCF\xD0" +
		"\x03\x02\x02\x02\xD0\xD1\b\x18\x02\x02\xD10\x03\x02\x02\x02\xD2\xD6\x07" +
		"^\x02\x02\xD3\xD7\t\b\x02\x02\xD4\xD7\x053\x1A\x02\xD5\xD7\x05m7\x02\xD6" +
		"\xD3\x03\x02\x02\x02\xD6\xD4\x03\x02\x02\x02\xD6\xD5\x03\x02\x02\x02\xD7" +
		"2\x03\x02\x02\x02\xD8\xD9\x07w\x02\x02\xD9\xDA\x055\x1B\x02\xDA\xDB\x05" +
		"5\x1B\x02\xDB\xDC\x055\x1B\x02\xDC\xDD\x055\x1B\x02\xDD4\x03\x02\x02\x02" +
		"\xDE\xDF\t\t\x02\x02\xDF6\x03\x02\x02\x02\xE0\xE1\x07^\x02\x02\xE1\xE2" +
		"\x070\x02\x02\xE28\x03\x02\x02\x02\xE3\xE4\t\n\x02\x02\xE4:\x03\x02\x02" +
		"\x02\xE5\xE6\t\v\x02\x02\xE6<\x03\x02\x02\x02\xE7\xE8\t\f\x02\x02\xE8" +
		">\x03\x02\x02\x02\xE9\xEA\t\r\x02\x02\xEA@\x03\x02\x02\x02\xEB\xEC\t\x0E" +
		"\x02\x02\xECB\x03\x02\x02\x02\xED\xEE\t\x0F\x02\x02\xEED\x03\x02\x02\x02" +
		"\xEF\xF0\t\x10\x02\x02\xF0F\x03\x02\x02\x02\xF1\xF2\t\x11\x02\x02\xF2" +
		"H\x03\x02\x02\x02\xF3\xF4\t\x12\x02\x02\xF4J\x03\x02\x02\x02\xF5\xF6\t" +
		"\x13\x02\x02\xF6L\x03\x02\x02\x02\xF7\xF8\t\x14\x02\x02\xF8N\x03\x02\x02" +
		"\x02\xF9\xFA\t\x15\x02\x02\xFAP\x03\x02\x02\x02\xFB\xFC\t\x16\x02\x02" +
		"\xFCR\x03\x02\x02\x02\xFD\xFE\t\x17\x02\x02\xFET\x03\x02\x02\x02\xFF\u0100" +
		"\t\x18\x02\x02\u0100V\x03\x02\x02\x02\u0101\u0102\t\x19\x02\x02\u0102" +
		"X\x03\x02\x02\x02\u0103\u0104\t\x1A\x02\x02\u0104Z\x03\x02\x02\x02\u0105" +
		"\u0106\t\x1B\x02\x02\u0106\\\x03\x02\x02\x02\u0107\u0108\t\x1C\x02\x02" +
		"\u0108^\x03\x02\x02\x02\u0109\u010A\t\x1D\x02\x02\u010A`\x03\x02\x02\x02" +
		"\u010B\u010C\t\x1E\x02\x02\u010Cb\x03\x02\x02\x02\u010D\u010E\t\x1F\x02" +
		"\x02\u010Ed\x03\x02\x02\x02\u010F\u0110\t \x02\x02\u0110f\x03\x02\x02" +
		"\x02\u0111\u0112\t!\x02\x02\u0112h\x03\x02\x02\x02\u0113\u0114\t\"\x02" +
		"\x02\u0114j\x03\x02\x02\x02\u0115\u0116\t#\x02\x02\u0116l\x03\x02\x02" +
		"\x02\u0117\u0118\x07#\x02\x02\u0118n\x03\x02\x02\x02\x0E\x02\xA4\xAD\xB2" +
		"\xB4\xBA\xBC\xC3\xC5\xC9\xCE\xD6\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ExpressionLexer.__ATN) {
			ExpressionLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ExpressionLexer._serializedATN));
		}

		return ExpressionLexer.__ATN;
	}

}

